
{
    path: 'albums/:albumId',
    component: AlbumDetailComponent,
    canActivate: [LoggedInGuard]
  }
  
  Since the request was for AlbumDetail component but was forwareded to LoggedInGuard for auth purpose, Loggedinguard C=can acces the original request url
  using state.url
  
  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {
   
   //if not login then navigate to /login with query params
    if (!this.loginService.loggedIn) {
      this.router.navigate(['/login'], {
        queryParams: {
          destination: state.url
        }
      });
      return false;
    }
    return true;
  }
  
  
  
  navigate to /login with query params
  import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { LoginService } from './login.service';

@Component({
  template: `
    <h1>Login</h1>
    <div>
      <input type="text" [(ngModel)]="user" placeholder="User">
      <input type="password" [(ngModel)]="password" placeholder="Password">
      <button (click)="login()" class="btn btn-primary">Login</button>
    </div>
  `
})
export class LoginFormComponent {

  user = '';
  password = '';

  constructor(private route: ActivatedRoute,
              private router: Router,
              private loginService: LoginService) { }

  login() {
    if (this.loginService.login(this.user, this.password)) {
      const destination =
        this.route.snapshot.queryParams['destination'] || '/';
      this.router.navigateByUrl(destination);
    }
  }

}
