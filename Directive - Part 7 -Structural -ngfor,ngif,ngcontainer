https://angular.io/guide/structural-directives


<div template="ngIf hero">{{hero.name}}</div> 
     is translated as :

<ng-template [ngIf]="hero">
  <div>{{hero.name}}</div>
</ng-template

................................................................................
*ngFor


A template input variable
a template reference variable
You declare a template reference variable by prefixing the variable name with # (#var). 
A reference variable refers to its attached element, component or directive. 
It can be accessed anywhere in the entire template.

.................................................................................

ng-container
https://angular.io/guide/structural-directives
https://stackoverflow.com/questions/39547858/angular-2-ng-container
https://netbasal.com/getting-to-know-the-ng-container-directive-in-angular-a97b7a33c8ea

problem : You can't wrap the options in a conditional <div> or a <span>
The browser won't display an <option> within a <span>

<h3>Problem </h3>

<div>
  Pick your favorite hero
  (<label><input type="checkbox" checked (change)="showSad = !showSad">show sad</label>)
</div>
<select [(ngModel)]="hero">
  <span *ngFor="let h of heroes">
    <span *ngIf="showSad || h.emotion !== 'sad'">
      <option [ngValue]="h">{{h.name}} ({{h.emotion}})</option>
    </span>
  </span>
</select>

<h3>Solution </h3>

<div>
  Pick your favorite hero
  (<label><input type="checkbox" checked (change)="showSad = !showSad">show sad</label>)
</div>
<select [(ngModel)]="hero">
  <ng-container *ngFor="let h of heroes">
    <ng-container *ngIf="showSad || h.emotion !== 'sad'">
      <option [ngValue]="h">{{h.name}} ({{h.emotion}})</option>
    </ng-container>
  </ng-container>
</select>





The <ng-container> is a syntax element recognized by the Angular parser. It's not a directive, component, class, 
or interface. It's more like the curly braces in a JavaScript if-block:

 content_copy
if (someCondition) {
  statement1;
  statement2;
  statement3;
}
Without those braces, JavaScript would only execute the first statement when you intend to conditionally
execute all of them as a single block. The <ng-container> satisfies a similar need in Angular templates.


