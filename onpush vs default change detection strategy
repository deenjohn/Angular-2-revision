

https://angular.io/api/core/ChangeDetectionStrategy'
https://stackoverflow.com/questions/39795634/angular-2-change-detection-and-changedetectionstrategy-onpush

OnPush strategy

When a component is marked with changeDetection: ChangeDetectionStrategy.OnPush, angular will assume 
that the input object did not change if the object reference did not change.
Meaning that changing a property won't trigger change detection.


import { Component ,OnInit,DoCheck, Input} from '@angular/core';
import {OnChangesComponent} from './on-changes/on-changes.component'





@Component({
  selector: 'app', 
  templateUrl: '../src/app.component.html',
  styleUrls: ['../src/app.component.css']
})
export class AppComponent implements DoCheck{

  constructor(){
    var input ='Apple'
    input = input.toUpperCase(); //state changed 


  }

  movies = [ 
    { title: 'm1' },
    { title: 'm2' },
    { title: 'm3' }
  ];

  ngDoCheck(){
    console.log("log AppComponent")
  }
  onClick(){
    //this.movies[0].title = "UPDATED" ;
    this.movies[0] = {title : 'UPDATED'}
  }

}



import { Component, Input,DoCheck ,ChangeDetectionStrategy } from '@angular/core';

@Component({
  selector: 'movie',
  templateUrl: '../src/movie/movie.component.html',
  styleUrls: ['../src/movie/movie.component.css'] ,
  changeDetection :ChangeDetectionStrategy.OnPush
})
export class MovieComponent implements DoCheck{
  @Input() movie;
   
   /* changedetection only going to look at movie object
    passed to this component
     this.movies[0].title = "UPDATED"
     we are updating the movie title but movie refrence still points to same location.
     hence no change detection will occur

     this.movies[0] = {title : 'UPDATED'}
     This time movie reference points to a new location , 
     hence this change is pushed to child component
    

    */

  ngDoCheck(){
    console.log("log MovieComponent")
  }

}


























